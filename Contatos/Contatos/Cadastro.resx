<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NzIO6EIAAAAASUVORK5CYII=
</value>
  </data>
</root>